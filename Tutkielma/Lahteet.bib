@inproceedings{RefWorks:doc:5bc4a5cbe4b0af09f17dfdc1,
	author={Chris Green},
	year={Aug 5, 2007},
	title={Improved alpha-tested magnification for vector textures and special effects},
	series={SIGGRAPH '07},
	publisher={ACM},
	pages={9-18},
	abstract={A simple and efficient method is presented which allows improved rendering of glyphs composed of curved and linear elements. A distance field is generated from a high resolution image, and then stored into a channel of a lower-resolution texture. In the simplest case, this texture can then be rendered simply by using the alpha-testing and alpha-thresholding feature of modern GPUs, without a custom shader. This allows the technique to be used on even the lowest-end 3D graphics hardware. With the use of programmable shading, the technique is extended to perform various special effect renderings, including soft edges, outlining, drop shadows, multi-colored images, and sharp corners.},
	url={http://dl.acm.org/citation.cfm?id=1281665},
	doi={10.1145/1281500.1281665}
}
@misc{RefWorks:doc:5bc4a5cde4b0f79042082292,
	author={Tobias Isenberg and M. Sheelagh T. Carpendale and Mario Costa Sousa},
	year={2005},
	title={Breaking the Pixel Barrier},
	abstract={Computational Aesthetics in Graphics, Visualization and Imaging The majority of the current advances in computer graphic rendering strive for fast and realistic creation of pixel images, e. g., for the film and gaming industry. This development, unfortunately, leads to various problems due to limitations of pixel images, in particular, when they are not used for screen viewing. Thus, in this paper we argue for the placement of greater emphasis on the generation of vector graphics. Vector graphics offer the best approach for achieving effectiveness for both media simulation and illustration techniques. We discuss advantages of using vector graphics, pose a number of questions in this context, and evaluate directions of further research.},
	url={http://www.dx.doi.org/10.2312/COMPAESTH/COMPAESTH05/041-048},
	doi={10.2312/COMPAESTH/COMPAESTH05/041-048}
}
@article{RefWorks:doc:5bc4a5cce4b080e02f7eff1b,
	author={Mark Kilgard and Jeff Bolz},
	year={2012},
	month={Nov 1,},
	title={GPU-accelerated path rendering},
	journal={ACM Transactions on Graphics (TOG)},
	volume={31},
	number={6},
	pages={1-10},
	abstract={For thirty years, resolution-independent 2D standards (e.g. PostScript, SVG) have depended on CPU-based algorithms for the filling and stroking of paths. Advances in graphics hardware have largely ignored accelerating resolution-independent 2D graphics rendered from paths. We introduce a two-step "Stencil, then Cover" (StC) programming interface. Our GPU-based approach builds upon existing techniques for curve rendering using the stencil buffer, but we explicitly decouple in our programming interface the stencil step to determine a path's filled or stroked coverage from the subsequent cover step to rasterize conservative geometry intended to test and reset the coverage determinations of the first step while shading color samples within the path. Our goals are completeness, correctness, quality, and performance---yet we go further to unify path rendering with OpenGL's established 3D and shading pipeline. We have built and productized our approach to accelerate path rendering as an OpenGL extension.},
	isbn={0730-0301},
	url={http://dl.acm.org/citation.cfm?id=2366191},
	doi={10.1145/2366145.2366191}
}
@inproceedings{RefWorks:doc:5bc4a5cbe4b095ca6e593f15,
	author={Yoshiyuki Kokojima and Kaoru Sugita and Takahiro Saito and Takashi Takemoto},
	year={Jul 30, 2006},
	title={Resolution independent rendering of deformable vector objects using graphics hardware},
	series={SIGGRAPH '06},
	publisher={ACM},
	pages={es},
	url={http://dl.acm.org/citation.cfm?id=1179997},
	doi={10.1145/1179849.1179997}
}
@article{RefWorks:doc:5bc4a5cbe4b067d1d7447f29,
	author={Charles Loop and Jim Blinn},
	year={2005},
	month={Jul 1,},
	title={Resolution independent curve rendering using programmable graphics hardware},
	journal={ACM Transactions on Graphics (TOG)},
	volume={24},
	number={3},
	pages={1000-1009},
	abstract={We present a method for resolution independent rendering of paths and bounded regions, defined by quadratic and cubic spline curves, that leverages the parallelism of programmable graphics hardware to achieve high performance. A simple implicit equation for a parametric curve is found in a space that can be thought of as an analog to texture space. The image of a curve's Bézier control points are found in this space and assigned to the control points as texture coordinates. When the triangle(s) corresponding to the Bézier curve control hull are rendered, a pixel shader program evaluates the implicit equation for a pixel's interpolated texture coordinates to determine an inside/outside test for the curve. We extend our technique to handle anti-aliasing of boundaries. We also construct a vector image from mosaics of triangulated Bézier control points and show how to deform such images to create resolution independent texture on three dimensional objects.},
	isbn={0730-0301},
	url={http://dl.acm.org/citation.cfm?id=1073303},
	doi={10.1145/1073204.1073303}
}
@misc{RefWorks:doc:5bd8319de4b03ae5c9b276b8,
	author = 	 {Martin Drapeau},
	year = 	 {2016},
	month = 	 {Jun 8,},
	title = 	 {Scaling your Mobile Game to Any Device Size},
	url = 	 {https://medium.com/@martindrapeau/scaling-your-mobile-game-to-any-device-size-4d12dd79cad6}
}
@misc{RefWorks:doc:5bd88176e4b0afdabde2b8e2,
	author = 	 {Stoic},
	year = 	 {2013},
	title = 	 {Animation process},
	url = 	 {https://stoicstudio.com/animation-process/}
}
@misc{RefWorks:doc:5bd74719e4b0e42e08f6333b,
	author = 	 {W3C},
	year = 	 {2011},
	title = 	 {Scalable Vector Graphics (SVG) 1.1 (Second Edition)},
	url = 	 {https://www.w3.org/TR/SVG11/}
}
@misc{RefWorks:doc:5bd6d887e4b0a1f99c62e6de,
	author={{Bethesda Softworks}},
	year={2018},
	title={Fallout Shelter},
	note={Luettu 29.10.2018},
	url={https://www.falloutshelter.com/}
}
