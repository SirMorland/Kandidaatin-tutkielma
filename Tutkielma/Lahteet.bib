@misc{RefWorks:doc:5bded7f3e4b09dfad48b846c,
	author = 	 {Zack Rusin},
	year = 	 {2008},
	title = 	 {SVG in KDE},
	note = 	 {Luettu 4.11.2018},
	url = 	 {http://www.svgopen.org/2008/papers/104-SVG_in_KDE/}
}
@misc{RefWorks:doc:5bde3d66e4b0a1f99c63ae5a,
	author = 	 {David Chappell},
	year = 	 {2006},
	month = 	 {September},
	title = 	 {Introducing Windows Presentation
Foundation},
	note = 	 {Luettu 4.11.2018},
	url = 	 {https://msdn.microsoft.com/en-us/library/aa663364.aspx}
}
@misc{RefWorks:doc:5bde1508e4b0afdabde34e20,
	author={Google},
	year={2017},
	month={February 23,},
	title={Using Google Charts},
	note={Luettu 3.11.2018}
}
@misc{RefWorks:doc:5bddb08ee4b0a1f99c639447,
	author = 	 {Alex Clem},
	year = 	 {2018},
	month = 	 {August 31,},
	title = 	 {3 Reasons Why Your Brand Logo Needs to Be a Vector
},
	note = 	 {Luettu 3.11.2018},
	url = 	 {https://www.shutterstock.com/blog/why-your-brand-needs-a-vector-logo}
}
@article{RefWorks:doc:5bdd9b5ae4b0954dddb26329,
	author={Francisco Ganacim and Rodolfo Lima and Luiz de Figueiredo and Diego Nehab},
	year={2014},
	month={Nov 19,},
	title={Massively-parallel vector graphics},
	journal={ACM Transactions on Graphics (TOG)},
	volume={33},
	number={6},
	pages={1-14},
	abstract={We present a massively parallel vector graphics rendering pipeline that is divided into two components. The preprocessing component builds a novel adaptive acceleration data structure, the shortcut tree . Tree construction is efficient and parallel at the segment level, enabling dynamic vector graphics. The tree allows efficient random access to the color of individual samples, so the graphics can be warped for special effects. The rendering component processes all samples and pixels in parallel. It was optimized for wide antialiasing filters and a large number of samples per pixel to generate sharp, noise-free images. Our sample scheduler allows pixels with overlapping antialiasing filters to share samples. It groups together samples that can be computed with the same vector operations using little memory or bandwidth. The pipeline is feature-rich, supporting multiple layers of filled paths, each defined by curved outlines (with linear, rational quadratic, and integral cubic Bézier segments), clipped against other paths, and painted with semi-transparent colors, gradients, or textures. We demonstrate renderings of complex vector graphics in state-of-the-art quality and performance. Finally, we provide full source-code for our implementation as well as the input data used in the paper.},
	isbn={0730-0301},
	url={http://dl.acm.org/citation.cfm?id=2661274},
	doi={10.1145/2661229.2661274}
}
@misc{RefWorks:doc:5bdc9306e4b069b454d8459e,
	author = 	 {{Adobe Systems}},
	year = 	 {2012},
	title = 	 {SWF File Format Specification Version 19}
}
@misc{RefWorks:doc:5bdc900de4b0afdabde32fb7,
	author = 	 {{Adobe Systems}},
	year = 	 {1992},
	month = 	 {May 1,},
	title = 	 {Encapsulated PostScript
File Format Specification}
}
@misc{RefWorks:doc:5bdc818be4b0965708b5a0f0,
	author = 	 {Chris Harvey},
	year = 	 {2013},
	month = 	 {Sep 23,},
	title = 	 {Postmortem: DrinkBox Studios' Guacamelee!},
	note = 	 {Luettu 2.11.2018},
	url = 	 {http://www.gamasutra.com/view/feature/200658/postmortem_drinkbox_studios_.php}
}
@misc{RefWorks:doc:5bdc7473e4b05afcfde5d742,
	author = 	 {Neal Ronaghan},
	year = 	 {2012},
	month = 	 {Sep 18,},
	title = 	 {Scribblenauts Unlimited Wii U Interview with 5TH Cell},
	note = 	 {Luettu 2.11.2018},
	url = 	 {http://www.nintendoworldreport.com/interview/31785/scribblenauts-unlimited-wii-u-interview-with-5th-cell}
}
@article{RefWorks:doc:5bdc736ae4b05afcfde5d6e4,
	author={Duncan Temple Lang and Deborah Nolan},
	year={2012},
	month={Jan 25,},
	title={Interactive and Animated Scalable Vector Graphics and R Data Displays},
	journal={Journal of Statistical Software},
	volume={46},
	number={1},
	abstract={We describe an approach to creating interactive and animated graphical displays using RÃ¢ÂÂs graphics engine and Scalable Vector Graphics, an XML vocabulary for describing two-dimensional graphical displays. We use the svg() graphics device inR and then post-process the resulting XML documents. The post-processing identifies the elements in the SVG that correspond to the different components of the graphical display, e.g., points, axes, labels, lines. One can then annotate these elements to add interactivity and animation effects. One can also use JavaScript to provide dynamic interactive effects to the plot, enabling rich user interactions and compelling visualizations. The resulting SVG documents can be embedded within HTML documents and can involve JavaScript code that integrates the SVG and HTML objects. The functionality is provided via the SVGAnnotation package and makes static plots generated viaR graphics functions available as stand-alone, interactive and animated plots for the Web and other venues.},
	url={http://econpapers.repec.org/article/jssjstsof/46_3ai01.htm}
}
@book{RefWorks:doc:5bdc5292e4b05afcfde5b171,
	author={Rex Van der Spuy},
	year={2010},
	title={AdvancED game design with Flash},
	publisher={Friends of ED},
	address={New York},
	isbn={1430227397}
}
@book{RefWorks:doc:5bdc5224e4b05afcfde5b159,
	author={June Jamrich Parsons},
	year={2017},
	month={Jul 25,},
	title={New Perspectives on Computer Concepts 2018},
	publisher={Cengage Learning US},
	address={Mason, OH},
	isbn={1305951492}
}
@misc{RefWorks:doc:5bd88176e4b0afdabde2b8e2,
	author = 	 {Stoic},
	year = 	 {2013},
	title = 	 {Animation process},
	note = 	 {Luettu 30.10.2018},
	url = 	 {https://stoicstudio.com/animation-process/}
}
@misc{RefWorks:doc:5bd8319de4b03ae5c9b276b8,
	author = 	 {Martin Drapeau},
	year = 	 {2016},
	month = 	 {Jun 8,},
	title = 	 {Scaling your Mobile Game to Any Device Size},
	note = 	 {Luettu 30.10.2018},
	url = 	 {https://medium.com/@martindrapeau/scaling-your-mobile-game-to-any-device-size-4d12dd79cad6}
}
@misc{RefWorks:doc:5bd74719e4b0e42e08f6333b,
	author = 	 {W3C},
	year = 	 {2011},
	month = 	 {August 16,},
	title = 	 {Scalable Vector Graphics (SVG) 1.1 (Second Edition)},
	url = 	 {https://www.w3.org/TR/SVG11/}
}
@misc{RefWorks:doc:5bd6d887e4b0a1f99c62e6de,
	author={{Bethesda Softworks}},
	year={2018},
	title={Fallout Shelter},
	note={Luettu 29.10.2018},
	url={https://www.falloutshelter.com/}
}
@misc{RefWorks:doc:5bc4a5cde4b0f79042082292,
	author={Tobias Isenberg and M. Sheelagh T. Carpendale and Mario Costa Sousa},
	year={2005},
	title={Breaking the Pixel Barrier},
	abstract={Computational Aesthetics in Graphics, Visualization and Imaging The majority of the current advances in computer graphic rendering strive for fast and realistic creation of pixel images, e. g., for the film and gaming industry. This development, unfortunately, leads to various problems due to limitations of pixel images, in particular, when they are not used for screen viewing. Thus, in this paper we argue for the placement of greater emphasis on the generation of vector graphics. Vector graphics offer the best approach for achieving effectiveness for both media simulation and illustration techniques. We discuss advantages of using vector graphics, pose a number of questions in this context, and evaluate directions of further research.},
	url={http://www.dx.doi.org/10.2312/COMPAESTH/COMPAESTH05/041-048},
	doi={10.2312/COMPAESTH/COMPAESTH05/041-048}
}
@article{RefWorks:doc:5bc4a5cce4b080e02f7eff1b,
	author={Mark Kilgard and Jeff Bolz},
	year={2012},
	month={Nov 1,},
	title={GPU-accelerated path rendering},
	journal={ACM Transactions on Graphics (TOG)},
	volume={31},
	number={6},
	pages={1-10},
	abstract={For thirty years, resolution-independent 2D standards (e.g. PostScript, SVG) have depended on CPU-based algorithms for the filling and stroking of paths. Advances in graphics hardware have largely ignored accelerating resolution-independent 2D graphics rendered from paths. We introduce a two-step "Stencil, then Cover" (StC) programming interface. Our GPU-based approach builds upon existing techniques for curve rendering using the stencil buffer, but we explicitly decouple in our programming interface the stencil step to determine a path's filled or stroked coverage from the subsequent cover step to rasterize conservative geometry intended to test and reset the coverage determinations of the first step while shading color samples within the path. Our goals are completeness, correctness, quality, and performance---yet we go further to unify path rendering with OpenGL's established 3D and shading pipeline. We have built and productized our approach to accelerate path rendering as an OpenGL extension.},
	isbn={0730-0301},
	url={http://dl.acm.org/citation.cfm?id=2366191},
	doi={10.1145/2366145.2366191}
}
@inproceedings{RefWorks:doc:5bc4a5cbe4b0af09f17dfdc1,
	author={Chris Green},
	year={Aug 5, 2007},
	title={Improved alpha-tested magnification for vector textures and special effects},
	series={SIGGRAPH '07},
	publisher={ACM},
	pages={9-18},
	abstract={A simple and efficient method is presented which allows improved rendering of glyphs composed of curved and linear elements. A distance field is generated from a high resolution image, and then stored into a channel of a lower-resolution texture. In the simplest case, this texture can then be rendered simply by using the alpha-testing and alpha-thresholding feature of modern GPUs, without a custom shader. This allows the technique to be used on even the lowest-end 3D graphics hardware. With the use of programmable shading, the technique is extended to perform various special effect renderings, including soft edges, outlining, drop shadows, multi-colored images, and sharp corners.},
	url={http://dl.acm.org/citation.cfm?id=1281665},
	doi={10.1145/1281500.1281665}
}
@inproceedings{RefWorks:doc:5bc4a5cbe4b095ca6e593f15,
	author={Yoshiyuki Kokojima and Kaoru Sugita and Takahiro Saito and Takashi Takemoto},
	year={Jul 30, 2006},
	title={Resolution independent rendering of deformable vector objects using graphics hardware},
	series={SIGGRAPH '06},
	publisher={ACM},
	pages={es},
	url={http://dl.acm.org/citation.cfm?id=1179997},
	doi={10.1145/1179849.1179997}
}
@article{RefWorks:doc:5bc4a5cbe4b067d1d7447f29,
	author={Charles Loop and Jim Blinn},
	year={2005},
	month={Jul 1,},
	title={Resolution independent curve rendering using programmable graphics hardware},
	journal={ACM Transactions on Graphics (TOG)},
	volume={24},
	number={3},
	pages={1000-1009},
	abstract={We present a method for resolution independent rendering of paths and bounded regions, defined by quadratic and cubic spline curves, that leverages the parallelism of programmable graphics hardware to achieve high performance. A simple implicit equation for a parametric curve is found in a space that can be thought of as an analog to texture space. The image of a curve's Bézier control points are found in this space and assigned to the control points as texture coordinates. When the triangle(s) corresponding to the Bézier curve control hull are rendered, a pixel shader program evaluates the implicit equation for a pixel's interpolated texture coordinates to determine an inside/outside test for the curve. We extend our technique to handle anti-aliasing of boundaries. We also construct a vector image from mosaics of triangulated Bézier control points and show how to deform such images to create resolution independent texture on three dimensional objects.},
	isbn={0730-0301},
	url={http://dl.acm.org/citation.cfm?id=1073303},
	doi={10.1145/1073204.1073303}
}
